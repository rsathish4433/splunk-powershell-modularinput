<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- default settings -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>1.0</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2146681F-33E5-4078-9F6D-AC880E7AC699}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Splunk</RootNamespace>
    <AssemblyName>SA-ModularInput-PowerShell</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>$(SolutionDir)Output\Debug\$(AssemblyName)</OutputPath>
    <OutputBinPath>windows_x86_64\bin\</OutputBinPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>$(SolutionDir)Output\Release\$(AssemblyName)</OutputPath>
    <OutputBinPath>windows_x86_64\bin\</OutputBinPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>$(SolutionDir)Output\Debug\$(AssemblyName)</OutputPath>
    <OutputBinPath>windows_x86\bin\</OutputBinPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>$(SolutionDir)Output\Release\$(AssemblyName)</OutputPath>
    <OutputBinPath>windows_x86\bin\</OutputBinPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="windows_x86\bin\Modules\LocalStorage\LocalStorage.psm1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="default\app.conf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="default\data\ui\nav\default.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="default\data\ui\views\examples.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <SubType>Designer</SubType>
    </Content>
    <Content Include="default\data\ui\views\install.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <SubType>Designer</SubType>
    </Content>
    <Content Include="metadata\default.meta">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="README\sample_input.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="README\README.md">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="appserver\static\appIcon.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="appserver\static\appIcon.xcf" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="default\props.conf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="README\inputs.conf.spec">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="windows_x86_64\bin\Modules\LocalStorage\LocalStorage.psm1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ModularPowerShell\ModularPowerShell.csproj">
      <Project>{edfc2cf0-26b5-4f09-8a77-63e8eb747f52}</Project>
      <Name>ModularPowerShell</Name>
    </ProjectReference>
  </ItemGroup>
  <!-- App is a package for creating the Splunk app structure in visual studio.
       If we wanted to turn this into a re-usable recipe for creating splunk apps
       we could remove the stuff from here down and stick it in a splunk.targets file.
  -->
  <Import Project="$(MSBuildToolsPath)\Microsoft.Common.targets" />
  <!-- For now  "App" is a C# application, since that was the simplest way to get it to show up nicely
       *** But that means that building produces output. ***

       To fix that, we override the BuildDependsOn step, and prevent calling CopyFilesToOutputDirectory
       That way, although we produce a .dll, it's never copied to the output folder.
       Then we add these two steps (which were part of CopyFilesToOutputDirectory):
        _CopyFilesMarkedCopyLocal - Copy the output from referenced projects 
        _CopySourceItemsToOutputDirectory - Copy the "Content" items from this project
  -->
  <PropertyGroup>
    <!-- this is a minimal build which doesn't copy the compiled output of "App" (See Above) -->
    <BuildDependsOn>BeforeBuild;BuildOnlySettings;ResolveReferences;ResolveKeySource;
      AssignTargetPaths;_CopyFilesMarkedCopyLocal;_CopySourceItemsToOutputDirectory;
      AfterBuild;
    </BuildDependsOn>
  </PropertyGroup>
  <!-- We need to package our binaries up, so we have some extra steps here -->
  <!-- These depend on files that are in a solution-level folder .7zip (like .nuget) -->
  <PropertyGroup>
    <SevenZipPath>$(SolutionDir).nuget\7za.exe</SevenZipPath>
    <PublishPath Condition="$(PublishPath) == ''">$(OutputPath)..\$(AssemblyName).tar.gz</PublishPath>
    <Files Condition="$(Files) == ''">$(OutputPath)\..\*</Files>
    <!-- See http://msdn.microsoft.com/en-us/magazine/dd419659.aspx#id0090093 -->
    <CleanDependsOn>CleanPublish;$(CleanDependsOn);</CleanDependsOn>
    <PublishDependsOn>Build;</PublishDependsOn>
  </PropertyGroup>
  <Target Name="CleanPublish" BeforeTargets="Publish">
    <Delete Files="$(PublishPath)" />
  </Target>
  <Target Name="Publish" DependsOnTargets="$(PublishDependsOn)" Inputs="$(OutputPath)" Outputs="$(PublishPath)">
    <Message Importance="Low" Text="7Zip executable: $(SevenZipPath)" />
    <Error Condition="'$(SevenZipPath)' == '' Or !Exists($(SevenZipPath))" Text="7za.exe is not available." />
    <Exec WorkingDirectory="$(OutputPath)" Outputs="$(PublishPath)" Command="&quot;$(SevenZipPath)&quot; a -ttar -so  -x!*.vshost.exe -x!*.7z  -x!*.pdb -x!*.gz -x!*.zip stdout &quot;$(Files)&quot; | &quot;$(SevenZipPath)&quot; a -si -tgzip -mx9 &quot;$(PublishPath)&quot;" />
  </Target>
  <Import Project="$(SolutionDir)\.nuget\nuget.targets" />
</Project>